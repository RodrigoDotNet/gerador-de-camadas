//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataDrain.ORM.DAL {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DataDrain.ORM.DAL.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using DataDrain.Caching.Enuns;
        ///
        ///namespace DataDrain.Caching.Events
        ///{
        ///    public class CacheChangedEventArgs : EventArgs
        ///    {
        ///        public CacheChangedEventArgs(string chave, ECacheAcao acao)
        ///        {
        ///            Chave = chave;
        ///            Status = acao;
        ///        }
        ///
        ///        public string Chave { get; private set; }
        ///
        ///        public ECacheAcao Status { get; private set; }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string CacheChangedEventArgs {
            get {
                return ResourceManager.GetString("CacheChangedEventArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///namespace DataDrain.Caching.Events
        ///{
        ///    public delegate void CacheChangedEventHandler(object sender, CacheChangedEventArgs e);
        ///}
        ///.
        /// </summary>
        internal static string CacheChangedEventHandler {
            get {
                return ResourceManager.GetString("CacheChangedEventHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Collections.Specialized;
        ///using System.Linq;
        ///using System.Runtime.Caching;
        ///using DataDrain.Caching.Enuns;
        ///using DataDrain.Caching.Events;
        ///using DataDrain.Caching.Interfaces;
        ///
        ///namespace DataDrain.Caching
        ///{
        ///    public sealed class CachingMannager : ICachingProvider
        ///    {
        ///        #region Variaveis e Propriedades
        ///
        ///        private readonly MemoryCache _cache;
        ///        private readonly CacheItemPolicy _policy;
        ///        private static reado [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CachingMannager {
            get {
                return ResourceManager.GetString("CachingMannager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data.Linq.Mapping;
        ///using System.Linq;
        ///using System.Reflection;
        ///using Apoio.Enumeradores;
        ///using DataDrain.Caching;
        ///using MySql.Data.MySqlClient;
        ///
        ///namespace Apoio.CommandMap
        ///{
        ///    internal static class CmdMap
        ///    {
        ///        private static readonly CachingMannager Cache = new CachingMannager(new TimeSpan(0, 0, 20, 0));
        ///
        ///        internal static MySqlCommand CreateDbCommand&lt;T&gt;(T tipoObjeto, ETipoConsulta sqlType)
        ///        {
        ///            r [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CmdMap {
            get {
                return ResourceManager.GetString("CmdMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///using Apoio.CommandMap;
        ///using Apoio.Conexao;
        ///using Apoio.Enumeradores;
        ///using Apoio.Mapping;
        ///using CorpDAL.DataDrain;
        ///using DataDrain.Mapping;
        ///using MySql.Data.MySqlClient;
        ///
        ///namespace CorpDAL.Apoio.Base
        ///{
        ///    public abstract class CrudBase&lt;T&gt;  where T : class, new()
        ///    {
        ///        public virtual List&lt;T&gt; SelectAll()
        ///        {
        ///            try
        ///            {
        ///                using (var cnn = Singleton.RetornaConexao() [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CrudBase {
            get {
                return ResourceManager.GetString("CrudBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright (c) Microsoft Corporation.  All rights reserved.
        ///// This source code is made available under the terms of the Microsoft Public License (MS-PL)
        ///
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq.Expressions;
        ///using DataDrain.ORM.Data.Common.Language;
        ///using DataDrain.ORM.Data.Common.Mapping;
        ///
        ///namespace DataDrain.ORM.Data.Common.Expressions
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Extended node types for custom expressions
        ///    /// &lt;/summary&gt;
        ///    public enum DbExpressionType
        ///    {
        ///        Table = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DbExpressions {
            get {
                return ResourceManager.GetString("DbExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright (c) Microsoft Corporation.  All rights reserved.
        ///// This source code is made available under the terms of the Microsoft Public License (MS-PL)
        ///
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Collections.ObjectModel;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///using DataDrain.ORM.Toolkit;
        ///using ExpressionVisitor = DataDrain.ORM.Toolkit.ExpressionVisitor;
        ///
        ///namespace DataDrain.ORM.Data.Common.Expressions
        ///{
        ///    /// &lt;summary&gt;
        ///    /// An extended expression visitor including custo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DbExpressionVisitor {
            get {
                return ResourceManager.GetString("DbExpressionVisitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Linq;
        ///
        ///namespace System.ComponentModel.DataAnnotations
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Este validador verifica se o valor é um dos valores especificados em um conjunto. 
        ///    /// &lt;/summary&gt;
        ///    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Property, AllowMultiple = false)]
        ///    public class DomainValidator : System.ComponentModel.DataAnnotations.ValidationAttribute
        ///    {
        ///        private readonly object[] _domain;
        ///        public DomainValidator(object[] domain)
        ///        {
        ///            _domai [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DomainValidator {
            get {
                return ResourceManager.GetString("DomainValidator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///namespace DataDrain.Caching.Enuns
        ///{
        ///    public enum ECacheAcao
        ///    {
        ///        Adicionado,
        ///        Removido,
        ///        Expirou,
        ///        Atualizado
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ECacheAcao {
            get {
                return ResourceManager.GetString("ECacheAcao", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace Apoio.Enumeradores
        ///{
        ///    public enum ETipoConsulta
        ///    {
        ///        SelectAll,
        ///        Insert,
        ///        Update,
        ///        Delete,
        ///        InsertWithReturn,
        ///        UpdateWithReturn
        ///    }
        ///}.
        /// </summary>
        internal static string ETipoConsulta {
            get {
                return ResourceManager.GetString("ETipoConsulta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///
        ///namespace TesteDAL.Apoio.Cache
        ///{
        ///    public class ExpiringDictionary&lt;TKey, TValue&gt; : IDictionary&lt;TKey, TValue&gt;
        ///    {
        ///        #region Variaveis
        ///
        ///        private readonly Dictionary&lt;TKey, ExpiringValueHolder&lt;TValue&gt;&gt; _innerDictionary;
        ///        private readonly TimeSpan _expiryTimeSpan;
        ///        private System.Timers.Timer timer;
        ///
        ///        #endregion
        ///
        ///        private void DestoryExpiredItems(TKey key)
        ///        {
        ///            if (_innerDictionary.Co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpiringDictionary {
            get {
                return ResourceManager.GetString("ExpiringDictionary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace TesteDAL.Apoio.Cache
        ///{
        ///    internal class ExpiringValueHolder&lt;T&gt;
        ///    {
        ///        public T Value { get; private set; }
        ///
        ///        public DateTime Expiry { get; private set; }
        ///
        ///        public ExpiringValueHolder(T value, TimeSpan expiresAfter)
        ///        {
        ///            Value = value;
        ///            Expiry = DateTime.Now.Add(expiresAfter);
        ///        }
        ///
        ///        public override string ToString()
        ///        {
        ///            return Value.ToString();
        ///        }
        ///
        ///        public override int GetHashCode()
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpiringValueHolder {
            get {
                return ResourceManager.GetString("ExpiringValueHolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Collections.ObjectModel;
        ///using System.Linq.Expressions;
        ///using System.Reflection;
        ///
        ///namespace DataDrain.ORM.Toolkit 
        ///{
        ///    public abstract class ExpressionVisitor
        ///    {
        ///        protected ExpressionVisitor()
        ///        {
        ///        }
        ///
        ///        protected virtual Expression Visit(Expression exp)
        ///        {
        ///            if (exp == null)
        ///                return exp;
        ///            switch (exp.NodeType)
        ///            {
        ///                case ExpressionType.Negate:
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpressionVisitor {
            get {
                return ResourceManager.GetString("ExpressionVisitor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq.Expressions;
        ///using System.Reflection;
        ///
        ///
        ///namespace DataDrain.Mapping
        ///{
        ///public class FastInvoke
        ///    {
        ///        public static Func&lt;T, TReturn&gt; BuildTypedGetter&lt;T, TReturn&gt;(PropertyInfo propertyInfo)
        ///        {
        ///            var reflGet = (Func&lt;T, TReturn&gt;) Delegate.CreateDelegate(typeof(Func&lt;T, TReturn&gt;), propertyInfo.GetGetMethod());
        ///            return reflGet;
        ///        }
        /// 
        ///        public static Action&lt;T, TProperty&gt; BuildTypedSetter&lt;T, TProperty&gt;(PropertyInfo property [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FastInvoke {
            get {
                return ResourceManager.GetString("FastInvoke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using DataDrain.ORM.Data.Common.Language;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Data.Common;
        ///using System.Linq.Expressions;
        ///using TesteDAL.DataDrain;
        ///using TesteDAL.DataDrain.Factories;
        ///
        ///namespace DataDrain.ORM.DAL.MySQL.ExpressionVisitor
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Formats a query expression into TSQL language syntax
        ///    /// &lt;/summary&gt;
        ///    internal class FireBirdFormatter : SqlFormatter, ISqlFormatter
        ///    {
        ///        public List&lt;DbParameter&gt; Parametros { get; set; }
        ///
        ///        public Fir [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FireBirdFormatter {
            get {
                return ResourceManager.GetString("FireBirdFormatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data.Common;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///using System.Reflection;
        ///using DataDrain;
        ///using DataDrain.Factories;
        ///using MySql.Data.MySqlClient;
        ///
        ///namespace CorpDAL.DataDrain
        ///{
        ///    internal class FuncoesCrud
        ///    {
        ///        /// &lt;summary&gt;
        ///        /// Lista de parametros do predicado
        ///        /// &lt;/summary&gt;
        ///        public static List&lt;MySqlParameter&gt; Parametros { get; set; }
        ///
        ///        /// &lt;summary&gt;
        ///        /// Retorna  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FuncoesCrud {
            get {
                return ResourceManager.GetString("FuncoesCrud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using DataDrain.Caching.Events;
        ///
        ///namespace DataDrain.Caching.Interfaces
        ///{
        ///    public interface ICachingProvider : IDisposable
        ///    {
        ///        void Adicionar&lt;T&gt;(string chave, T valor);
        ///        void Remover(string chave);
        ///        bool Existe(string chave);
        ///        KeyValuePair&lt;bool, T&gt; Recuperar&lt;T&gt;(string chave, bool removerAposRecuperar = false);
        ///        void Clear();
        ///        event CacheChangedEventHandler CacheChanged;
        ///    }
        ///}.
        /// </summary>
        internal static string ICachingProvider {
            get {
                return ResourceManager.GetString("ICachingProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///namespace {namespace}Interfaces
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Interface de identificação dos objetos TO
        ///    /// &lt;/summary&gt;
        ///    public interface IEntity
        ///    {
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string IEntity {
            get {
                return ResourceManager.GetString("IEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data;
        ///using System.Linq.Expressions;
        ///
        ///namespace {namespace}Interfaces
        ///{
        ///    public interface IPersistence&lt;T&gt;
        ///    {
        ///        List&lt;T&gt; SelectAll();
        ///        int QuantidadeRegistros();
        ///        int QuantidadeRegistros(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        ///
        ///        T SelectFirstOrDefault(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        ///        List&lt;T&gt; Select(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        ///        List&lt;T&gt; Select(Expression&lt;Func&lt;T, bool&gt;&gt; predicate, IDbConnecti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string interfaceCRUD {
            get {
                return ResourceManager.GetString("interfaceCRUD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.Data.Common;
        ///using DataDrain.ORM.Data.Common.Language;
        ///using System.Linq.Expressions;
        ///
        ///namespace DataDrain.Factories
        ///{
        ///    internal interface ISqlFormatter
        ///    {
        ///        string Format(Expression expression, QueryLanguage language);
        ///
        ///        List&lt;DbParameter&gt; Parametros { get; set; }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ISqlFormatter {
            get {
                return ResourceManager.GetString("ISqlFormatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LADetalpmet {
            get {
                return ResourceManager.GetString("LADetalpmet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;Proje [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LLBetalpmet {
            get {
                return ResourceManager.GetString("LLBetalpmet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data;
        ///using System.Data.Linq.Mapping;
        ///using System.Linq;
        ///using System.Reflection;
        ///using TesteDAL.Apoio.Cache;
        ///using TesteDAL.Apoio.Conexao;
        ///using TesteDAL.Apoio.Enumeradores;
        ///
        ///namespace TesteDAL.Apoio.Mapping
        ///{
        ///    internal static class Map
        ///    {
        ///        /// &lt;summary&gt;
        ///        /// Cache Model Mapping dos objetos
        ///        /// &lt;/summary&gt;
        ///        private static ExpiringDictionary&lt;Type, ObjectMap&gt; _dictionaryOrm;
        ///
        ///        /// &lt;summary&gt;
        ///        /// Cache [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Map {
            get {
                return ResourceManager.GetString("Map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data;
        ///using System.Linq;
        ///using System.Reflection;
        ///using DataDrain.Caching;
        ///
        ///
        ///namespace DataDrain.Mapping
        ///{
        ///    internal static class Map
        ///    {
        ///        private static readonly CachingMannager Cache = new CachingMannager(new TimeSpan(0, 0, 5, 0));
        ///
        ///
        ///        /// &lt;summary&gt;
        ///        /// Mapeia os campos do DataTable para o objeto alvo
        ///        /// &lt;/summary&gt;
        ///        /// &lt;typeparam name=&quot;T&quot;&gt;Objeto a ser mapeado&lt;/typeparam&gt;
        ///        /// &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MapExtension {
            get {
                return ResourceManager.GetString("MapExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data.Common;
        ///using System.Linq.Expressions;
        ///using DataDrain.Factories;
        ///using DataDrain.ORM.Data.Common.Language;
        ///
        ///
        ///namespace DataDrain
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Formats a query expression into TSQL language syntax
        ///    /// &lt;/summary&gt;
        ///    internal class MySqlFormatter : SqlFormatter, ISqlFormatter
        ///    {
        ///        public List&lt;DbParameter&gt; Parametros { get; set; }
        ///
        ///        public MySqlFormatter()
        ///            : base(new SqlLanguage()) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MySqlFormatter {
            get {
                return ResourceManager.GetString("MySqlFormatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Visual Studio Solution File, Format Version 11.00
        ///# Visual Studio 2010
        ///Project(&quot;{[guid]}&quot;) = &quot;[namespace]TO&quot;, &quot;[namespace]TO\[namespace]TO.csproj&quot;, &quot;{[guidTO]}&quot;
        ///EndProject
        ///Project(&quot;{[guid]}&quot;) = &quot;[namespace]DAL&quot;, &quot;[namespace]DAL\[namespace]DAL.csproj&quot;, &quot;{[guidDAL]}&quot;
        ///EndProject
        ///Project(&quot;{[guid]}&quot;) = &quot;[namespace]Interfaces&quot;, &quot;[namespace]Interfaces\[namespace]Interfaces.csproj&quot;, &quot;{[guidInterface]}&quot;
        ///EndProject
        ///Project(&quot;{[guid]}&quot;) = &quot;[namespace]BLL&quot;, &quot;[namespace]BLL\[namespace]BLL.csproj&quot;, &quot;{[guidBLL]}&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string noituloS {
            get {
                return ResourceManager.GetString("noituloS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data.Linq.Mapping;
        ///using System.Reflection;
        ///
        ///namespace TesteDAL.Apoio.Mapping
        ///{
        ///    internal class ObjectMap
        ///    {
        ///        public List&lt;KeyValuePair&lt;PropertyInfo, ColumnAttribute&gt;&gt; Propriedades { get; set; }
        ///
        ///        public Object ObjetoAlvo { get; set; }
        ///
        ///        public List&lt;string&gt; NomeCampos { get; set; }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string ObjectMap {
            get {
                return ResourceManager.GetString("ObjectMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Reflection;
        ///using System.Runtime.InteropServices;
        ///
        ///// General Information about an assembly is controlled through the following 
        ///// set of attributes. Change these attribute values to modify the information
        ///// associated with an assembly.
        ///[assembly: AssemblyTitle(&quot;[namespace][camada]&quot;)]
        ///[assembly: AssemblyDescription(&quot;Camada de acesso a dados&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;Data Drain ORM&quot;)]
        ///[assembly: AssemblyProduct(&quot;[namespace][camada]&quot;)]
        ///[assembly: Assem [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ofnIylbmessA {
            get {
                return ResourceManager.GetString("ofnIylbmessA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Data;
        ///using System.Data.Linq.Mapping;
        ///using System.Reflection;
        ///using System.Text;
        ///using TesteDAL.Apoio.Enumeradores;
        ///
        ///namespace TesteDAL.Apoio.Mapping
        ///{
        ///    internal class OpcoesParametro
        ///    {
        ///        public PropertyInfo Prop { get; set; }
        ///
        ///        public IDbCommand Cmd { get; set; }
        ///
        ///        public ColumnAttribute DaoProperty { get; set; }
        ///
        ///        public bool HasCondition { get; set; }
        ///
        ///        public StringBuilder SbWhere { get; set; }
        ///
        ///        public ETipoConsulta TipoConsulta { get; set;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OpcoesParametro {
            get {
                return ResourceManager.GetString("OpcoesParametro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OTetalpmet {
            get {
                return ResourceManager.GetString("OTetalpmet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Linq.Expressions;
        ///using {namespace}BLL.Validacao;
        ///using {namespace}DAL;
        ///using {namespace}TO;
        ///
        ///
        ///namespace {namespace}BLL
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Responsavel pelas Regras de negócio da Entidade
        ///    /// &lt;/summary&gt;
        ///    public class {classe}BLL
        ///    {
        ///        private readonly {classe}DAL _repository;
        ///		[logHeader]
        ///        
        ///        public {classe}BLL()
        ///        {
        ///            try
        ///            {
        ///				_repository= new {classe}DAL();
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string padraoBLLNativo {
            get {
                return ResourceManager.GetString("padraoBLLNativo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using {namespace}DAL;
        ///using {namespace}TO;
        ///
        ///namespace {namespace}BLL
        ///{
        ///    public class {classe}BLL
        ///    {
        ///        private readonly {classe}DAL _repository;
        ///
        ///        public {classe}BLL()
        ///        {
        ///            _repository = new {classe}DAL();
        ///        }
        ///
        ///        public List&lt;{classe}TO&gt; Select({parametros})
        ///        {
        ///            try
        ///            {
        ///                return _repository.Select({parametros2});
        ///            }
        ///            catch (Except [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string padraoBLLProc {
            get {
                return ResourceManager.GetString("padraoBLLProc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {namespace}DAL.Apoio.Base;
        ///using {namespace}TO;
        ///
        ///namespace {namespace}DAL
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Responsavel pelo CRUD basico das entidades
        ///    /// &lt;/summary&gt;
        ///    public sealed class {classe}DAL : CrudBase&lt;{classe}TO&gt;
        ///    {
        ///    }
        ///}.
        /// </summary>
        internal static string padraoDALNativo {
            get {
                return ResourceManager.GetString("padraoDALNativo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.Data;
        ///using Apoio.Conexao;
        ///using {namespace}TO;
        ///using DataDrain.Mapping;
        ///
        ///namespace {namespace}DAL
        ///{
        ///    public sealed class {classe}DAL
        ///    {
        ///        public List&lt;{classe}TO&gt; Select({parametros})
        ///        {
        ///            using (var cnn = Singleton.RetornaConexao())
        ///            {
        ///                var cmd = cnn.CreateCommand();
        ///                cmd.CommandText = &quot;&quot;;
        ///                cmd.CommandType = CommandType.StoredProcedure;
        ///                {carreg [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string padraoDALProc {
            get {
                return ResourceManager.GetString("padraoDALProc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data.Common;
        ///using System.Linq.Expressions;
        ///using DataDrain.ORM.Data.Common.Language;
        ///using TesteDAL.DataDrain;
        ///using TesteDAL.DataDrain.Factories;
        ///
        ///
        ///namespace DataDrain.ORM.DAL.SQLServer.ExpressionVisitor
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Formats a query expression into TSQL language syntax
        ///    /// &lt;/summary&gt;
        ///    internal class PostgresFormatter : SqlFormatter, ISqlFormatter
        ///    {
        ///        public List&lt;DbParameter&gt; Parametros { get; set; }
        ///
        ///        publi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PostgresFormatter {
            get {
                return ResourceManager.GetString("PostgresFormatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace DataDrain.ORM.Data.Common
        ///{
        ///    public interface ICreateExecutor
        ///    {
        ///        QueryExecutor CreateExecutor();
        ///    }
        ///
        ///    public abstract class QueryExecutor
        ///    {
        ///        // called from compiled execution plan
        ///        public abstract int RowsAffected { get; }
        ///        public abstract object Convert(object value, Type type);
        ///
        ///    }
        ///}.
        /// </summary>
        internal static string QueryExecutor {
            get {
                return ResourceManager.GetString("QueryExecutor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright (c) Microsoft Corporation.  All rights reserved.
        ///// This source code is made available under the terms of the Microsoft Public License (MS-PL)
        ///
        ///using System.Collections;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///using System.Reflection;
        ///using DataDrain.ORM.Data.Common.Expressions;
        ///
        ///namespace DataDrain.ORM.Data.Common.Language
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Defines the language rules for the query provider
        ///    /// &lt;/summary&gt;
        ///    public abstract class QueryLanguage
        ///    {
        ///        public abstr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QueryLanguage {
            get {
                return ResourceManager.GetString("QueryLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright (c) Microsoft Corporation.  All rights reserved.
        ///// This source code is made available under the terms of the Microsoft Public License (MS-PL)
        ///
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///using System.Reflection;
        ///using DataDrain.ORM.Data.Common.Expressions;
        ///
        ///namespace DataDrain.ORM.Data.Common.Mapping
        ///{
        ///    public abstract class MappingEntity
        ///    {
        ///        public abstract string TableId { get; }
        ///        public abstract Type ElementType { get [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QueryMapping {
            get {
                return ResourceManager.GetString("QueryMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright (c) Microsoft Corporation.  All rights reserved.
        ///// This source code is made available under the terms of the Microsoft Public License (MS-PL)
        ///
        ///using System;
        ///
        ///namespace DataDrain.ORM.Data.Common.Language
        ///{
        ///    public abstract class QueryType
        ///    {
        ///        public abstract bool NotNull { get; }
        ///        public abstract int Length { get; }
        ///        public abstract short Precision { get; }
        ///        public abstract short Scale { get; }
        ///    }
        ///
        ///    public abstract class QueryTypeSystem 
        ///    {
        ///        pub [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QueryTypeSystem {
            get {
                return ResourceManager.GetString("QueryTypeSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;Import Project=&quot;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&quot; Condition=&quot;Exists(&apos;$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props&apos;)&quot; /&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;Proje [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string secafretnIetalpmeT {
            get {
                return ResourceManager.GetString("secafretnIetalpmeT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Configuration;
        ///using MySql.Data.MySqlClient;
        ///
        ///namespace Apoio.Conexao
        ///{
        ///    internal static class Singleton
        ///    {
        ///        public static MySqlConnection RetornaConexao()
        ///        {
        ///            return new MySqlConnection(RetornaConnectionString());
        ///        }
        ///
        ///        private static string RetornaConnectionString()
        ///        {
        ///            try
        ///            {
        ///                var strConexao = ConfigurationManager.ConnectionStrings[&quot;STRING_CONNECTION&quot;].ConnectionString;
        ///
        ///                retu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Singleton {
            get {
                return ResourceManager.GetString("Singleton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Copyright (c) Microsoft Corporation.  All rights reserved.
        ///// This source code is made available under the terms of the Microsoft Public License (MS-PL)
        ///
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Collections.ObjectModel;
        ///using System.Data;
        ///using System.Data.Common;
        ///using System.Data.Linq.Mapping;
        ///using System.Data.SqlClient;
        ///using System.Linq;
        ///using System.Linq.Expressions;
        ///using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Text;
        ///using DataDrain.ORM.Data.Commo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlFormatter {
            get {
                return ResourceManager.GetString("SqlFormatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq.Expressions;
        ///using System.Reflection;
        ///using DataDrain.ORM.Data.Common.Language;
        ///
        ///namespace DataDrain
        ///{
        ///
        ///    internal class SqlLanguage : QueryLanguage
        ///    {
        ///        //DbTypeSystem typeSystem = new DbTypeSystem();
        ///
        ///        public override QueryTypeSystem TypeSystem
        ///        {
        ///            get { return null; }
        ///        }
        ///
        ///        public override bool AllowsMultipleCommands
        ///        {
        ///            get { return false; }
        ///        }
        ///
        ///        public override bool All [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlLanguage {
            get {
                return ResourceManager.GetString("SqlLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data.Common;
        ///using System.Linq.Expressions;
        ///using DataDrain.ORM.Data.Common.Language;
        ///using TesteDAL.DataDrain;
        ///using TesteDAL.DataDrain.Factories;
        ///
        ///
        ///namespace DataDrain.ORM.DAL.SQLServer.ExpressionVisitor
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Formats a query expression into TSQL language syntax
        ///    /// &lt;/summary&gt;
        ///    internal class SqlLiteFormatter : SqlFormatter, ISqlFormatter
        ///    {
        ///        public List&lt;DbParameter&gt; Parametros { get; set; }
        ///
        ///        public [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlLiteFormatter {
            get {
                return ResourceManager.GetString("SqlLiteFormatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.Data.Common;
        ///using System.Linq.Expressions;
        ///using DataDrain.ORM.Data.Common.Language;
        ///using TesteDAL.DataDrain;
        ///using TesteDAL.DataDrain.Factories;
        ///
        ///namespace DataDrain.ORM.DAL.SQLServer.ExpressionVisitor
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Formats a query expression into TSQL language syntax
        ///    /// &lt;/summary&gt;
        ///    internal class SqlServerFormatter : SqlFormatter, ISqlFormatter
        ///    {
        ///        public List&lt;DbParameter&gt; Parametros { get; set; }
        ///
        ///        publi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlServerFormatter {
            get {
                return ResourceManager.GetString("SqlServerFormatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Linq;
        ///using System.Reflection;
        ///
        ///namespace {namespace}Interfaces
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Classe responsavel pela permissão de uso do sistema
        ///    /// &lt;/summary&gt;
        ///    public class StrongNamePermission
        ///    {
        ///        /// &lt;summary&gt;
        ///        /// Valida se o Assembly que esta usando a classe é assinado como o mesmo StrongName
        ///        /// &lt;/summary&gt;
        ///        /// &lt;param name=&quot;callerAssembly&quot;&gt;Assembly que esta chamando o projeto&lt;/param&gt;
        ///        /// &lt;param name=&quot;currentAssembly&quot;&gt;Assembly do  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string StrongNamePermission {
            get {
                return ResourceManager.GetString("StrongNamePermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System.Collections.Generic;
        ///using System.Linq;
        ///using Apoio.CommandMap;
        ///using Apoio.Enumeradores;
        ///using MySql.Data.MySqlClient;
        ///
        ///namespace Apoio.Mapping
        ///{
        ///    internal static class Transaction
        ///    {
        ///        #region .: Métodos :.
        ///
        ///        /// &lt;summary&gt;
        ///        /// Executa lista de comando sem retorno gerando um comando pré compilado
        ///        /// &lt;/summary&gt;
        ///        /// &lt;typeparam name=&quot;T&quot;&gt;&lt;/typeparam&gt;
        ///        /// &lt;param name=&quot;clsGeneric&quot;&gt;lista generica&lt;/param&gt;
        ///        /// &lt;param name=&quot;cnn&quot;&gt;conexão com o B [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Transaction {
            get {
                return ResourceManager.GetString("Transaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.ComponentModel.DataAnnotations;
        ///using System.Linq;
        ///
        ///namespace TesteBLL.Validacao
        ///{
        ///    /// &lt;summary&gt;
        ///    /// Classe responsavel pela validação dos DataAnnotations
        ///    /// &lt;/summary&gt;
        ///    public class Validar
        ///    {
        ///
        ///        /// &lt;summary&gt;
        ///        /// Verifica se o objeto é valido para ser enviado ao banco de dados
        ///        /// &lt;/summary&gt;
        ///        /// &lt;typeparam name=&quot;T&quot;&gt;&lt;/typeparam&gt;
        ///        /// &lt;param name=&quot;generic&quot;&gt;Classe a ser validada&lt;/param&gt;
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Validar {
            get {
                return ResourceManager.GetString("Validar", resourceCulture);
            }
        }
    }
}
