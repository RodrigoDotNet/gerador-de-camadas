<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="interfaceCRUD" xml:space="preserve">
    <value>using System;
using System.Collections.Generic;
using System.Data;
using System.Linq.Expressions;

namespace {namespace}Interfaces
{
    public interface IPersistence&lt;T&gt;
    {
        List&lt;T&gt; SelectAll();
        int QuantidadeRegistros();
        int QuantidadeRegistros(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);

        T SelectFirstOrDefault(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        List&lt;T&gt; Select(Expression&lt;Func&lt;T, bool&gt;&gt; predicate);
        List&lt;T&gt; Select(Expression&lt;Func&lt;T, bool&gt;&gt; predicate, IDbConnection cnn, IDbTransaction trans);

        T Insert(T objGeneric);
        void Insert(T objGeneric, IDbConnection cnn, IDbTransaction trans);
        void Insert(List&lt;T&gt; clsGeneric);

        T Update(T objGeneric);
        void Update(T objGeneric, IDbConnection cnn, IDbTransaction trans);
        void Update(List&lt;T&gt; clsGeneric);

        void Delete(T objGeneric);
        void Delete(T objGeneric, IDbConnection cnn, IDbTransaction trans);
        void Delete(List&lt;T&gt; clsGeneric);
    }
}</value>
  </data>
  <data name="LADetalpmet" xml:space="preserve">
    <value>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&gt;
  &lt;Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" /&gt;
  &lt;PropertyGroup&gt;
    &lt;Configuration Condition=" '$(Configuration)' == '' "&gt;Debug&lt;/Configuration&gt;
    &lt;Platform Condition=" '$(Platform)' == '' "&gt;AnyCPU&lt;/Platform&gt;
    &lt;ProjectGuid&gt;{[guid]}&lt;/ProjectGuid&gt;
    &lt;OutputType&gt;Library&lt;/OutputType&gt;
    &lt;AppDesignerFolder&gt;Properties&lt;/AppDesignerFolder&gt;
    &lt;RootNamespace&gt;[namespace]DAL&lt;/RootNamespace&gt;
    &lt;AssemblyName&gt;[namespace]DAL&lt;/AssemblyName&gt;
    &lt;TargetFrameworkVersion&gt;[versao]&lt;/TargetFrameworkVersion&gt;
    &lt;FileAlignment&gt;512&lt;/FileAlignment&gt;
  &lt;/PropertyGroup&gt;
  &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "&gt;
    &lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt;
    &lt;DebugType&gt;full&lt;/DebugType&gt;
    &lt;Optimize&gt;false&lt;/Optimize&gt;
    &lt;OutputPath&gt;bin\Debug\&lt;/OutputPath&gt;
    &lt;DefineConstants&gt;DEBUG;TRACE&lt;/DefineConstants&gt;
    &lt;ErrorReport&gt;prompt&lt;/ErrorReport&gt;
    &lt;WarningLevel&gt;4&lt;/WarningLevel&gt;
  &lt;/PropertyGroup&gt;
  &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "&gt;
    &lt;DebugType&gt;pdbonly&lt;/DebugType&gt;
    &lt;Optimize&gt;true&lt;/Optimize&gt;
    &lt;OutputPath&gt;bin\Release\&lt;/OutputPath&gt;
    &lt;DefineConstants&gt;TRACE&lt;/DefineConstants&gt;
    &lt;ErrorReport&gt;prompt&lt;/ErrorReport&gt;
    &lt;WarningLevel&gt;4&lt;/WarningLevel&gt;
  &lt;/PropertyGroup&gt;
  &lt;ItemGroup&gt;
    &lt;Reference Include="System" /&gt;
    &lt;Reference Include="System.Configuration" /&gt;
    &lt;Reference Include="System.Core" /&gt;
    &lt;Reference Include="System.Data.Linq" /&gt;
    &lt;Reference Include="System.Runtime.Caching" /&gt;
    &lt;Reference Include="System.Xml.Linq" /&gt;
    &lt;Reference Include="System.Data.DataSetExtensions" /&gt;
    &lt;Reference Include="System.Data" /&gt;
    &lt;Reference Include="System.Xml" /&gt;
  &lt;/ItemGroup&gt;
  &lt;ItemGroup&gt;
    [log]
    [arquivos]
    &lt;Compile Include="ORM\Caching\CachingMannager.cs" /&gt;
    &lt;Compile Include="ORM\Caching\Enuns\ECacheAcao.cs" /&gt;
    &lt;Compile Include="ORM\Caching\Events\CacheChangedEventArgs.cs" /&gt;
    &lt;Compile Include="ORM\Caching\Events\CacheChangedEventHandler.cs" /&gt;
    &lt;Compile Include="ORM\Caching\Interfaces\ICachingProvider.cs" /&gt;
    &lt;Compile Include="ORM\FastInvoke.cs" /&gt;
    &lt;Compile Include="ORM\MapExtension.cs" /&gt;
    &lt;Compile Include="Apoio\CommandMap\Transaction.cs" /&gt;
    &lt;Compile Include="DataDrain\FuncoesCrud.cs" /&gt;
    &lt;Compile Include="Apoio\CommandMap\CmdMap.cs" /&gt;
    &lt;Compile Include="Apoio\Conexao\Singleton.cs" /&gt;
    &lt;Compile Include="Apoio\Enumeradores\ETipoConsulta.cs" /&gt;
    &lt;Compile Include="Apoio\Base\CrudBase.cs" /&gt;
    &lt;Compile Include="DataDrain\Factories\MySqlFormatter.cs" /&gt;
    &lt;Compile Include="DataDrain\SqlLanguage.cs" /&gt;
    &lt;Compile Include="DataDrain\TSqlORM\DbExpressions.cs" /&gt;
    &lt;Compile Include="DataDrain\TSqlORM\DbExpressionVisitor.cs" /&gt;
    &lt;Compile Include="DataDrain\TSqlORM\ExpressionVisitor.cs" /&gt;
    &lt;Compile Include="DataDrain\TSqlORM\QueryExecutor.cs" /&gt;
    &lt;Compile Include="DataDrain\TSqlORM\QueryLanguage.cs" /&gt;
    &lt;Compile Include="DataDrain\TSqlORM\QueryMapping.cs" /&gt;
    &lt;Compile Include="DataDrain\TSqlORM\QueryTypeSystem.cs" /&gt;
    &lt;Compile Include="DataDrain\TSqlORM\SqlFormatter.cs" /&gt;
    &lt;Compile Include="DataDrain\Factories\ISqlFormatter.cs" /&gt;
    &lt;Compile Include="Properties\AssemblyInfo.cs" /&gt;
  &lt;/ItemGroup&gt;
  &lt;ItemGroup&gt;
    &lt;ProjectReference Include="..\[namespace]Interfaces\[namespace]Interfaces.csproj"&gt;
      &lt;Project&gt;{[guidInterface]}&lt;/Project&gt;
      &lt;Name&gt;[namespace]Interfaces&lt;/Name&gt;
    &lt;/ProjectReference&gt;
    &lt;ProjectReference Include="..\[namespace]TO\[namespace]TO.csproj"&gt;
      &lt;Project&gt;{[guidTO]}&lt;/Project&gt;
      &lt;Name&gt;[namespace]TO&lt;/Name&gt;
    &lt;/ProjectReference&gt;
  &lt;/ItemGroup&gt;
  &lt;Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" /&gt;
  &lt;!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  &lt;Target Name="BeforeBuild"&gt;
  &lt;/Target&gt;
  &lt;Target Name="AfterBuild"&gt;
  &lt;/Target&gt;
  --&gt;
&lt;/Project&gt;</value>
  </data>
  <data name="LLBetalpmet" xml:space="preserve">
    <value>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&gt;
  &lt;Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" /&gt;
  &lt;PropertyGroup&gt;
    &lt;Configuration Condition=" '$(Configuration)' == '' "&gt;Debug&lt;/Configuration&gt;
    &lt;Platform Condition=" '$(Platform)' == '' "&gt;AnyCPU&lt;/Platform&gt;
    &lt;ProjectGuid&gt;{[guid]}&lt;/ProjectGuid&gt;
    &lt;OutputType&gt;Library&lt;/OutputType&gt;
    &lt;AppDesignerFolder&gt;Properties&lt;/AppDesignerFolder&gt;
    &lt;RootNamespace&gt;[namespace]BLL&lt;/RootNamespace&gt;
    &lt;AssemblyName&gt;[namespace]BLL&lt;/AssemblyName&gt;
    &lt;TargetFrameworkVersion&gt;[versao]&lt;/TargetFrameworkVersion&gt;
    &lt;FileAlignment&gt;512&lt;/FileAlignment&gt;
  &lt;/PropertyGroup&gt;
  &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "&gt;
    &lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt;
    &lt;DebugType&gt;full&lt;/DebugType&gt;
    &lt;Optimize&gt;false&lt;/Optimize&gt;
    &lt;OutputPath&gt;bin\Debug\&lt;/OutputPath&gt;
    &lt;DefineConstants&gt;DEBUG;TRACE&lt;/DefineConstants&gt;
    &lt;ErrorReport&gt;prompt&lt;/ErrorReport&gt;
    &lt;WarningLevel&gt;4&lt;/WarningLevel&gt;
  &lt;/PropertyGroup&gt;
  &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "&gt;
    &lt;DebugType&gt;pdbonly&lt;/DebugType&gt;
    &lt;Optimize&gt;true&lt;/Optimize&gt;
    &lt;OutputPath&gt;bin\Release\&lt;/OutputPath&gt;
    &lt;DefineConstants&gt;TRACE&lt;/DefineConstants&gt;
    &lt;ErrorReport&gt;prompt&lt;/ErrorReport&gt;
    &lt;WarningLevel&gt;4&lt;/WarningLevel&gt;
  &lt;/PropertyGroup&gt;
  &lt;ItemGroup&gt;
    &lt;Reference Include="System" /&gt;
    &lt;Reference Include="System.ComponentModel.DataAnnotations" /&gt;
    &lt;Reference Include="System.Core" /&gt;
    &lt;Reference Include="System.Xml.Linq" /&gt;
    &lt;Reference Include="System.Data.DataSetExtensions" /&gt;
    &lt;Reference Include="System.Data" /&gt;
    &lt;Reference Include="System.Xml" /&gt;
  &lt;/ItemGroup&gt;
  &lt;ItemGroup&gt;
    [log]
    [arquivos]
    &lt;Compile Include="Properties\AssemblyInfo.cs" /&gt;
    &lt;Compile Include="Validacao\Validar.cs" /&gt;
  &lt;/ItemGroup&gt;
  &lt;ItemGroup&gt;
    &lt;ProjectReference Include="..\[namespace]DAL\[namespace]DAL.csproj"&gt;
      &lt;Project&gt;{[guidDAL]}&lt;/Project&gt;
      &lt;Name&gt;[namespace]DAL&lt;/Name&gt;
    &lt;/ProjectReference&gt;
    &lt;ProjectReference Include="..\[namespace]Interfaces\[namespace]Interfaces.csproj"&gt;
      &lt;Project&gt;{[guidInterface]}&lt;/Project&gt;
      &lt;Name&gt;[namespace]Interfaces&lt;/Name&gt;
    &lt;/ProjectReference&gt;
    &lt;ProjectReference Include="..\[namespace]TO\[namespace]TO.csproj"&gt;
      &lt;Project&gt;{[guidTO]}&lt;/Project&gt;
      &lt;Name&gt;[namespace]TO&lt;/Name&gt;
    &lt;/ProjectReference&gt;
  &lt;/ItemGroup&gt;
  &lt;Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" /&gt;
  &lt;!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  &lt;Target Name="BeforeBuild"&gt;
  &lt;/Target&gt;
  &lt;Target Name="AfterBuild"&gt;
  &lt;/Target&gt;
  --&gt;
&lt;/Project&gt;</value>
  </data>
  <data name="noituloS" xml:space="preserve">
    <value>Microsoft Visual Studio Solution File, Format Version 11.00
# Visual Studio 2010
Project("{[guid]}") = "[namespace]TO", "[namespace]TO\[namespace]TO.csproj", "{[guidTO]}"
EndProject
Project("{[guid]}") = "[namespace]DAL", "[namespace]DAL\[namespace]DAL.csproj", "{[guidDAL]}"
EndProject
Project("{[guid]}") = "[namespace]Interfaces", "[namespace]Interfaces\[namespace]Interfaces.csproj", "{[guidInterface]}"
EndProject
Project("{[guid]}") = "[namespace]BLL", "[namespace]BLL\[namespace]BLL.csproj", "{[guidBLL]}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{[guidTO]}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{[guidTO]}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{[guidTO]}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{[guidTO]}.Release|Any CPU.Build.0 = Release|Any CPU
		{[guidDAL]}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{[guidDAL]}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{[guidDAL]}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{[guidDAL]}.Release|Any CPU.Build.0 = Release|Any CPU
		{[guidInterface]}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{[guidInterface]}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{[guidInterface]}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{[guidInterface]}.Release|Any CPU.Build.0 = Release|Any CPU
		{[guidBLL]}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{[guidBLL]}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{[guidBLL]}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{[guidBLL]}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
EndGlobal</value>
  </data>
  <data name="ofnIylbmessA" xml:space="preserve">
    <value>using System.Reflection;
using System.Runtime.InteropServices;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("[namespace][camada]")]
[assembly: AssemblyDescription("Camada de acesso a dados")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Data Drain ORM")]
[assembly: AssemblyProduct("[namespace][camada]")]
[assembly: AssemblyCopyright("Copyright ©  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
{sing}
[log]

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("[guid]")]

// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Build and Revision Numbers 
// by using the '*' as shown below:
// [assembly: AssemblyVersion("1.0.*")]
[assembly: AssemblyVersion("1.0.0.0")]
[assembly: AssemblyFileVersion("1.0.0.0")]</value>
  </data>
  <data name="OTetalpmet" xml:space="preserve">
    <value>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&gt;
  &lt;Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" /&gt;
  &lt;PropertyGroup&gt;
    &lt;Configuration Condition=" '$(Configuration)' == '' "&gt;Debug&lt;/Configuration&gt;
    &lt;Platform Condition=" '$(Platform)' == '' "&gt;AnyCPU&lt;/Platform&gt;
    &lt;ProjectGuid&gt;{[guid]}&lt;/ProjectGuid&gt;
    &lt;OutputType&gt;Library&lt;/OutputType&gt;
    &lt;AppDesignerFolder&gt;Properties&lt;/AppDesignerFolder&gt;
    &lt;RootNamespace&gt;[namespace]TO&lt;/RootNamespace&gt;
    &lt;AssemblyName&gt;[namespace]TO&lt;/AssemblyName&gt;
    &lt;TargetFrameworkVersion&gt;[versao]&lt;/TargetFrameworkVersion&gt;
    &lt;FileAlignment&gt;512&lt;/FileAlignment&gt;
    &lt;TargetFrameworkProfile /&gt;
  &lt;/PropertyGroup&gt;
  &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "&gt;
    &lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt;
    &lt;DebugType&gt;full&lt;/DebugType&gt;
    &lt;Optimize&gt;false&lt;/Optimize&gt;
    &lt;OutputPath&gt;bin\Debug\&lt;/OutputPath&gt;
    &lt;DefineConstants&gt;DEBUG;TRACE&lt;/DefineConstants&gt;
    &lt;ErrorReport&gt;prompt&lt;/ErrorReport&gt;
    &lt;WarningLevel&gt;4&lt;/WarningLevel&gt;
  &lt;/PropertyGroup&gt;
  &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "&gt;
    &lt;DebugType&gt;pdbonly&lt;/DebugType&gt;
    &lt;Optimize&gt;true&lt;/Optimize&gt;
    &lt;OutputPath&gt;bin\Release\&lt;/OutputPath&gt;
    &lt;DefineConstants&gt;TRACE&lt;/DefineConstants&gt;
    &lt;ErrorReport&gt;prompt&lt;/ErrorReport&gt;
    &lt;WarningLevel&gt;4&lt;/WarningLevel&gt;
  &lt;/PropertyGroup&gt;
  &lt;ItemGroup&gt;
    &lt;Reference Include="System" /&gt;
    &lt;Reference Include="System.ComponentModel.DataAnnotations" /&gt;
    &lt;Reference Include="System.Core" /&gt;
    &lt;Reference Include="System.Data.Linq" /&gt;
    &lt;Reference Include="System.Xml" /&gt;
    &lt;Reference Include="System.Runtime.Serialization" /&gt;    
  &lt;/ItemGroup&gt;
  &lt;ItemGroup&gt;
    &lt;Compile Include="AttributeValidators\DomainValidator.cs" /&gt;
    &lt;Compile Include="Properties\AssemblyInfo.cs" /&gt;
	  [arquivos]
  &lt;/ItemGroup&gt;
  &lt;ItemGroup&gt;
    &lt;ProjectReference Include="..\[namespace]Interfaces\[namespace]Interfaces.csproj"&gt;
      &lt;Project&gt;{[guidInterface]}&lt;/Project&gt;
      &lt;Name&gt;[namespace]Interfaces&lt;/Name&gt;
    &lt;/ProjectReference&gt;
  &lt;/ItemGroup&gt;
  &lt;Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" /&gt;
  &lt;!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  &lt;Target Name="BeforeBuild"&gt;
  &lt;/Target&gt;
  &lt;Target Name="AfterBuild"&gt;
  &lt;/Target&gt;
  --&gt;
&lt;/Project&gt;</value>
  </data>
  <data name="padraoBLLNativo" xml:space="preserve">
    <value>using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using {namespace}BLL.Validacao;
using {namespace}DAL;
using {namespace}TO;


namespace {namespace}BLL
{
    /// &lt;summary&gt;
    /// Responsavel pelas Regras de negócio da Entidade
    /// &lt;/summary&gt;
    public class {classe}BLL
    {
        private readonly {classe}DAL _repository;
		[logHeader]
        
        public {classe}BLL()
        {
            try
            {
				_repository= new {classe}DAL();
            }
            catch (Exception ex)
            {
                throw;
            }		
        }

        #region .: Select Basico :.

        public List&lt;{classe}TO&gt; SelectAll()
        {
            try
            {
                return _repository.SelectAll();
            }
			catch (Exception ex)
			{
				throw;
			}
        }
		
        public int QuantidadeRegistros()
        {
            try
            {
                return _repository.QuantidadeRegistros();
            }
			catch (Exception ex)
			{
				throw;
			}
        }

        public int QuantidadeRegistros(Expression&lt;Func&lt;{classe}TO, bool&gt;&gt; predicate)
        {
            try
            {
                return _repository.QuantidadeRegistros(predicate);
            }
			catch (Exception ex)
			{
				throw;
			}
        }		

        #endregion

        #region .: Select Avançado :.

        public {classe}TO SelectFirstOrDefault(Expression&lt;Func&lt;{classe}TO, bool&gt;&gt; predicate)
        {
            try
            {
                return _repository.SelectFirstOrDefault(predicate);
            }
			catch (Exception ex)
			{
				throw;
			}
        }	

        public List&lt;{classe}TO&gt; Select(Expression&lt;Func&lt;{classe}TO, bool&gt;&gt; predicate)
        {
            try
            {
                return _repository.Select(predicate);
            }
			catch (Exception ex)
			{
				throw;
			}
        }
		
        #endregion

        #region .: CRUD :.

        public {classe}TO Insert({classe}TO objGeneric)
        {
            try
            {
                Validar.Validate(objGeneric, false);

                return _repository.Insert(objGeneric);
            }
			catch (Exception ex)
			{
				throw;
			}
        }

        public {classe}TO Update({classe}TO objGeneric)
        {
            try
            {
                Validar.Validate(objGeneric, false);

                return _repository.Update(objGeneric);
            }
			catch (Exception ex)
			{
				throw;
			}
        }

        public void Insert(List&lt;{classe}TO&gt; clsGeneric)
        {
            try
            {
                foreach (var generic in clsGeneric)
                {
                    Validar.Validate(generic, false);
                }

                _repository.Insert(clsGeneric);
            }
			catch (Exception ex)
			{
				throw;
			}
        }

        public void Update(List&lt;{classe}TO&gt; clsGeneric)
        {
            try
            {
                foreach (var generic in clsGeneric)
                {
                    Validar.Validate(generic, false);
                }

                _repository.Update(clsGeneric);
            }
			catch (Exception ex)
			{
				throw;
			}
        }

        public void Delete({classe}TO objGeneric)
        {
            try
            {
                _repository.Delete(objGeneric);
            }
			catch (Exception ex)
			{
				throw;
			}
        }

        public void Delete(List&lt;{classe}TO&gt; clsGeneric)
        {
            try
            {
                _repository.Delete(clsGeneric);
            }
			catch (Exception ex)
			{
				throw;
			}
        }

        #endregion

       #region .: Validação :.

        /// &lt;summary&gt;
        /// Verifica se o objeto Cliente esta valido
        /// &lt;/summary&gt;
        /// &lt;param name="generic"&gt;Objeto a ser validado&lt;/param&gt;
        /// &lt;param name="msgErro"&gt;Retonar mensagem de erro se o mesmo existir&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static bool IsValid({classe}TO generic, out string msgErro)
        {
            try
            {
                msgErro = string.Empty;
                return Validar.Validate(generic, false);
            }
            catch (System.ComponentModel.DataAnnotations.ValidationException ex)
            {
                msgErro = ex.Message;
                return false;
            }
        }

        /// &lt;summary&gt;
        /// Valida se a lista de objetos Cliente esta valida
        /// &lt;/summary&gt;
        /// &lt;param name="lista"&gt;Lista a ser validada&lt;/param&gt;
        /// &lt;param name="msgErro"&gt;Retonar mensagem de erro se o mesmo existir&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static bool IsValid(List&lt;{classe}TO&gt; lista, out string msgErro)
        {
            var posicao = 0;

            try
            {
                foreach (var item in lista)
                {
                    posicao++;
                    Validar.Validate(item, false);
                }
                msgErro = string.Empty;
                return true;
            }
            catch (System.ComponentModel.DataAnnotations.ValidationException ex)
            {
                msgErro = string.Format("Erro no {0}º item da lista.\nErro:\n{1}", posicao, ex.Message);
                return false;
            }
        }

        #endregion		
		
    }
}</value>
    <comment>OK</comment>
  </data>
  <data name="padraoDALNativo" xml:space="preserve">
    <value>using {namespace}DAL.Apoio.Base;
using {namespace}TO;

namespace {namespace}DAL
{
    /// &lt;summary&gt;
    /// Responsavel pelo CRUD basico das entidades
    /// &lt;/summary&gt;
    public sealed class {classe}DAL : CrudBase&lt;{classe}TO&gt;
    {
    }
}</value>
    <comment>OK</comment>
  </data>
  <data name="secafretnIetalpmeT" xml:space="preserve">
    <value>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&gt;
  &lt;Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" /&gt;
  &lt;PropertyGroup&gt;
    &lt;Configuration Condition=" '$(Configuration)' == '' "&gt;Debug&lt;/Configuration&gt;
    &lt;Platform Condition=" '$(Platform)' == '' "&gt;AnyCPU&lt;/Platform&gt;
    &lt;ProjectGuid&gt;[guid]&lt;/ProjectGuid&gt;
    &lt;OutputType&gt;Library&lt;/OutputType&gt;
    &lt;AppDesignerFolder&gt;Properties&lt;/AppDesignerFolder&gt;
    &lt;RootNamespace&gt;[namespace]Interfaces&lt;/RootNamespace&gt;
    &lt;AssemblyName&gt;[namespace]Interfaces&lt;/AssemblyName&gt;
    &lt;TargetFrameworkVersion&gt;[versao]&lt;/TargetFrameworkVersion&gt;
    &lt;FileAlignment&gt;512&lt;/FileAlignment&gt;
    &lt;TargetFrameworkProfile /&gt;
  &lt;/PropertyGroup&gt;
  &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' "&gt;
    &lt;DebugSymbols&gt;true&lt;/DebugSymbols&gt;
    &lt;DebugType&gt;full&lt;/DebugType&gt;
    &lt;Optimize&gt;false&lt;/Optimize&gt;
    &lt;OutputPath&gt;bin\Debug\&lt;/OutputPath&gt;
    &lt;DefineConstants&gt;DEBUG;TRACE&lt;/DefineConstants&gt;
    &lt;ErrorReport&gt;prompt&lt;/ErrorReport&gt;
    &lt;WarningLevel&gt;4&lt;/WarningLevel&gt;
  &lt;/PropertyGroup&gt;
  &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "&gt;
    &lt;DebugType&gt;pdbonly&lt;/DebugType&gt;
    &lt;Optimize&gt;true&lt;/Optimize&gt;
    &lt;OutputPath&gt;bin\Release\&lt;/OutputPath&gt;
    &lt;DefineConstants&gt;TRACE&lt;/DefineConstants&gt;
    &lt;ErrorReport&gt;prompt&lt;/ErrorReport&gt;
    &lt;WarningLevel&gt;4&lt;/WarningLevel&gt;
  &lt;/PropertyGroup&gt;
  &lt;ItemGroup&gt;
    &lt;Reference Include="System.Core" /&gt;
	&lt;Reference Include="System.Data" /&gt;
  &lt;/ItemGroup&gt;
  &lt;ItemGroup&gt;
    &lt;Compile Include="IEntity.cs" /&gt;
	&lt;Compile Include="StrongNamePermission.cs" /&gt;
    [arquivos]
    &lt;Compile Include="Properties\AssemblyInfo.cs" /&gt;
  &lt;/ItemGroup&gt;
  &lt;Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" /&gt;
  &lt;!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  &lt;Target Name="BeforeBuild"&gt;
  &lt;/Target&gt;
  &lt;Target Name="AfterBuild"&gt;
  &lt;/Target&gt;
  --&gt;
&lt;/Project&gt;</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="CrudBase" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\CrudBase.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="DbExpressions" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\DbExpressions.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="DbExpressionVisitor" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\DbExpressionVisitor.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="DomainValidator" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\DomainValidator.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="ETipoConsulta" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ETipoConsulta.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="ExpiringDictionary" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ExpiringDictionary.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="ExpiringValueHolder" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ExpiringValueHolder.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="ExpressionVisitor" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ExpressionVisitor.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="FireBirdFormatter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\FireBirdFormatter.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="FuncoesCrud" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\FuncoesCrud.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="ISqlFormatter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ISqlFormatter.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="Map" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\Map.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="MySqlFormatter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\MySqlFormatter.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="ObjectMap" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ObjectMap.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="OpcoesParametro" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\OpcoesParametro.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="PostgresFormatter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\PostgresFormatter.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="QueryExecutor" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\QueryExecutor.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="QueryLanguage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\QueryLanguage.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="QueryMapping" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\QueryMapping.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="QueryTypeSystem" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\QueryTypeSystem.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="Singleton" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\Singleton.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="SqlFormatter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\SqlFormatter.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="SqlLanguage" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\SqlLanguage.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="SqlLiteFormatter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\SqlLiteFormatter.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="SqlServerFormatter" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\SqlServerFormatter.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="Transaction" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\Transaction.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="Validar" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\Validar.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="IEntity" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\IEntity.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="StrongNamePermission" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\StrongNamePermission.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="padraoBLLProc" xml:space="preserve">
    <value>using System;
using System.Collections.Generic;
using {namespace}DAL;
using {namespace}TO;

namespace {namespace}BLL
{
    public class {classe}BLL
    {
        private readonly {classe}DAL _repository;

        public {classe}BLL()
        {
            _repository = new {classe}DAL();
        }

        public List&lt;{classe}TO&gt; Select({parametros})
        {
            try
            {
                return _repository.Select({parametros2});
            }
            catch (Exception)
            {

                throw;
            }
        }
    }
}</value>
    <comment>OK</comment>
  </data>
  <data name="padraoDALProc" xml:space="preserve">
    <value>using System.Collections.Generic;
using System.Data;
using Apoio.Conexao;
using {namespace}TO;
using DataDrain.Mapping;

namespace {namespace}DAL
{
    public sealed class {classe}DAL
    {
        public List&lt;{classe}TO&gt; Select({parametros})
        {
            using (var cnn = Singleton.RetornaConexao())
            {
                var cmd = cnn.CreateCommand();
                cmd.CommandText = "";
                cmd.CommandType = CommandType.StoredProcedure;
                {carregaParametros}

                cnn.Open();

                using (var drGeneric = cmd.ExecuteReader())
                {
                    return drGeneric.MapToEntities&lt;{classe}TO&gt;();
                }
            }
        }
    }
}</value>
  </data>
  <data name="CacheChangedEventArgs" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\CacheChangedEventArgs.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="CacheChangedEventHandler" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\CacheChangedEventHandler.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="CachingMannager" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\CachingMannager.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="ECacheAcao" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ECacheAcao.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="FastInvoke" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\FastInvoke.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="ICachingProvider" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\ICachingProvider.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="MapExtension" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\MapExtension.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
  <data name="CmdMap" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\CmdMap.cs;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;utf-8</value>
  </data>
</root>